{
	"version": 3,
	"file": "hamburgers.css",
	"sources": [
		"../../css-source/hamburgers/hamburgers.scss",
		"../../css-source/hamburgers/_base.scss",
		"../../css-source/hamburgers/types/_slider.scss"
	],
	"sourcesContent": [
		"@charset \"UTF-8\";\n/*!\n * Hamburgers\n * @description Tasty CSS-animated hamburgers\n * @author Jonathan Suh @jonsuh\n * @site https://jonsuh.com/hamburgers\n * @link https://github.com/jonsuh/hamburgers\n */\n\n// Settings\n// ==================================================\n$hamburger-padding-x           : 15px !default;\n$hamburger-padding-y           : 15px !default;\n$hamburger-layer-width         : 40px !default;\n$hamburger-layer-height        : 4px !default;\n$hamburger-layer-spacing       : 6px !default;\n$hamburger-layer-color         : #000 !default;\n$hamburger-layer-border-radius : 4px !default;\n$hamburger-hover-opacity       : 0.7 !default;\n$hamburger-active-layer-color  : $hamburger-layer-color !default;\n$hamburger-active-hover-opacity: $hamburger-hover-opacity !default;\n\n// To use CSS filters as the hover effect instead of opacity,\n// set $hamburger-hover-use-filter as true and\n// change the value of $hamburger-hover-filter accordingly.\n$hamburger-hover-use-filter   : false !default;\n$hamburger-hover-filter       : opacity(50%) !default;\n$hamburger-active-hover-filter: $hamburger-hover-filter !default;\n\n// Types (Remove or comment out what you donâ€™t need)\n// ==================================================\n$hamburger-types: (\n  3dx,\n  3dx-r,\n  3dy,\n  3dy-r,\n  3dxy,\n  3dxy-r,\n  arrow,\n  arrow-r,\n  arrowalt,\n  arrowalt-r,\n  arrowturn,\n  arrowturn-r,\n  boring,\n  collapse,\n  collapse-r,\n  elastic,\n  elastic-r,\n  emphatic,\n  emphatic-r,\n  minus,\n  slider,\n  slider-r,\n  spin,\n  spin-r,\n  spring,\n  spring-r,\n  stand,\n  stand-r,\n  squeeze,\n  vortex,\n  vortex-r\n) !default;\n\n// Base Hamburger (We need this)\n// ==================================================\n@import \"base\";\n\n// Hamburger types\n// ==================================================\n// @import \"types/3dx\";\n// @import \"types/3dx-r\";\n// @import \"types/3dy\";\n// @import \"types/3dy-r\";\n// @import \"types/3dxy\";\n// @import \"types/3dxy-r\";\n// @import \"types/arrow\";\n// @import \"types/arrow-r\";\n// @import \"types/arrowalt\";\n// @import \"types/arrowalt-r\";\n// @import \"types/arrowturn\";\n// @import \"types/arrowturn-r\";\n// @import \"types/boring\";\n// @import \"types/collapse\";\n// @import \"types/collapse-r\";\n// @import \"types/elastic\";\n// @import \"types/elastic-r\";\n// @import \"types/emphatic\";\n// @import \"types/emphatic-r\";\n// @import \"types/minus\";\n@import \"types/slider\";\n// @import \"types/slider-r\";\n// @import \"types/spin\";\n// @import \"types/spin-r\";\n// @import \"types/spring\";\n// @import \"types/spring-r\";\n// @import \"types/stand\";\n// @import \"types/stand-r\";\n// @import \"types/squeeze\";\n// @import \"types/vortex\";\n// @import \"types/vortex-r\";\n\n// ==================================================\n// Cooking up additional types:\n//\n// The Sass for each hamburger type should be nested\n// inside an @if directive to check whether or not\n// it exists in $hamburger-types so only the CSS for\n// included types are generated.\n//\n// e.g. hamburgers/types/_new-type.scss\n//\n// @if index($hamburger-types, new-type) {\n//   .hamburger--new-type {\n//     ...\n//   }\n// }\n",
		"// Hamburger\n// ==================================================\n.hamburger {\n  padding: $hamburger-padding-y $hamburger-padding-x;\n  display: inline-block;\n  cursor: pointer;\n\n  transition-property: opacity, filter;\n  transition-duration: 0.15s;\n  transition-timing-function: linear;\n\n  // Normalize (<button>)\n  font: inherit;\n  color: inherit;\n  text-transform: none;\n  background-color: transparent;\n  border: 0;\n  margin: 0;\n  overflow: visible;\n\n  &:hover {\n    @if $hamburger-hover-use-filter == true {\n      filter: $hamburger-hover-filter;\n    }\n    @else {\n      opacity: $hamburger-hover-opacity;\n    }\n  }\n\n  &.is-active {\n    &:hover {\n      @if $hamburger-hover-use-filter == true {\n        filter: $hamburger-active-hover-filter;\n      }\n      @else {\n        opacity: $hamburger-active-hover-opacity;\n      }\n    }\n\n    .hamburger-inner,\n    .hamburger-inner::before,\n    .hamburger-inner::after {\n      background-color: $hamburger-active-layer-color;\n    }\n  }\n}\n\n.hamburger-box {\n  width: $hamburger-layer-width;\n  height: $hamburger-layer-height * 3 + $hamburger-layer-spacing * 2;\n  display: inline-block;\n  position: relative;\n}\n\n.hamburger-inner {\n  display: block;\n  top: 50%;\n  margin-top: $hamburger-layer-height / -2;\n\n  &,\n  &::before,\n  &::after {\n    width: $hamburger-layer-width;\n    height: $hamburger-layer-height;\n    background-color: $hamburger-layer-color;\n    border-radius: $hamburger-layer-border-radius;\n    position: absolute;\n    transition-property: transform;\n    transition-duration: 0.15s;\n    transition-timing-function: ease;\n  }\n\n  &::before,\n  &::after {\n    content: \"\";\n    display: block;\n  }\n\n  &::before {\n    top: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n\n  &::after {\n    bottom: ($hamburger-layer-spacing + $hamburger-layer-height) * -1;\n  }\n}\n",
		"@if index($hamburger-types, slider) {\n  /*\n   * Slider\n   */\n  .hamburger--slider {\n    .hamburger-inner {\n      top: $hamburger-layer-height / 2;\n\n      &::before {\n        top: $hamburger-layer-height + $hamburger-layer-spacing;\n        transition-property: transform, opacity;\n        transition-timing-function: ease;\n        transition-duration: 0.15s;\n      }\n\n      &::after {\n        top: ($hamburger-layer-height * 2) + ($hamburger-layer-spacing * 2);\n      }\n    }\n\n    &.is-active {\n      .hamburger-inner {\n        $y-offset: $hamburger-layer-spacing + $hamburger-layer-height;\n\n        transform: translate3d(0, $y-offset, 0) rotate(45deg);\n\n        &::before {\n          transform: rotate(-45deg) translate3d($hamburger-layer-width / -7, $hamburger-layer-spacing * -1, 0);\n          opacity: 0;\n        }\n\n        &::after {\n          transform: translate3d(0, $y-offset * -2, 0) rotate(-90deg);\n        }\n      }\n    }\n  }\n}\n"
	],
	"names": [],
	"mappings": "AACA;;;;;;GAMG;;ACLH,AAAA,UAAU,CAAC;EACT,OAAO,EDSwB,IAAI,CADJ,IAAI;ECPnC,OAAO,EAAE,YAAY;EACrB,MAAM,EAAE,OAAO;EAEf,mBAAmB,EAAE,eAAe;EACpC,mBAAmB,EAAE,KAAK;EAC1B,0BAA0B,EAAE,MAAM;EAGlC,IAAI,EAAE,OAAO;EACb,KAAK,EAAE,OAAO;EACd,cAAc,EAAE,IAAI;EACpB,gBAAgB,EAAE,WAAW;EAC7B,MAAM,EAAE,CAAC;EACT,MAAM,EAAE,CAAC;EACT,QAAQ,EAAE,OAAO,GA2BlB;;EA3CD,AAkBE,UAlBQ,AAkBP,MAAM,CAAC;IAKJ,OAAO,EDPoB,GAAG,GCSjC;;EAzBH,AA4BI,UA5BM,AA2BP,UAAU,AACR,MAAM,CAAC;IAKJ,OAAO,EDjBkB,GAAG,GCmB/B;;EAnCL,AAqCI,UArCM,AA2BP,UAAU,CAUT,gBAAgB;EArCpB,UAAU,AA2BP,UAAU,CAWT,gBAAgB,AAAA,QAAQ;EAtC5B,UAAU,AA2BP,UAAU,CAYT,gBAAgB,AAAA,OAAO,CAAC;IACtB,gBAAgB,ED1BW,IAAI,GC2BhC;;;AAIL,AAAA,cAAc,CAAC;EACb,KAAK,EDnC0B,IAAI;ECoCnC,MAAM,EAAE,IAA0D;EAClE,OAAO,EAAE,YAAY;EACrB,QAAQ,EAAE,QAAQ,GACnB;;;AAED,AAAA,gBAAgB,CAAC;EACf,OAAO,EAAE,KAAK;EACd,GAAG,EAAE,GAAG;EACR,UAAU,EAAE,IAA4B,GA4BzC;;EA/BD,AAKE,gBALc,EAAhB,gBAAgB,AAMb,QAAQ,EANX,gBAAgB,AAOb,OAAO,CAAC;IACP,KAAK,EDjDwB,IAAI;ICkDjC,MAAM,EDjDuB,GAAG;ICkDhC,gBAAgB,EDhDa,IAAI;ICiDjC,aAAa,EDhDgB,GAAG;ICiDhC,QAAQ,EAAE,QAAQ;IAClB,mBAAmB,EAAE,SAAS;IAC9B,mBAAmB,EAAE,KAAK;IAC1B,0BAA0B,EAAE,IAAI,GACjC;;EAhBH,AAkBE,gBAlBc,AAkBb,QAAQ,EAlBX,gBAAgB,AAmBb,OAAO,CAAC;IACP,OAAO,EAAE,EAAE;IACX,OAAO,EAAE,KAAK,GACf;;EAtBH,AAwBE,gBAxBc,AAwBb,QAAQ,CAAC;IACR,GAAG,EAAE,KAAyD,GAC/D;;EA1BH,AA4BE,gBA5Bc,AA4Bb,OAAO,CAAC;IACP,MAAM,EAAE,KAAyD,GAClE;;ACnFD;;KAEG;;AACH,AACE,kBADgB,CAChB,gBAAgB,CAAC;EACf,GAAG,EAAE,GAA2B,GAYjC;;EAdH,AAII,kBAJc,CAChB,gBAAgB,AAGb,QAAQ,CAAC;IACR,GAAG,EAAE,IAAkD;IACvD,mBAAmB,EAAE,kBAAkB;IACvC,0BAA0B,EAAE,IAAI;IAChC,mBAAmB,EAAE,KAAK,GAC3B;;EATL,AAWI,kBAXc,CAChB,gBAAgB,AAUb,OAAO,CAAC;IACP,GAAG,EAAE,IAA8D,GACpE;;;AAbL,AAiBI,kBAjBc,AAgBf,UAAU,CACT,gBAAgB,CAAC;EAGf,SAAS,EAAE,uBAA4B,CAAC,aAAa,GAUtD;;EA9BL,AAsBM,kBAtBY,AAgBf,UAAU,CACT,gBAAgB,AAKb,QAAQ,CAAC;IACR,SAAS,EAAE,cAAc,CAAC,gCAA0E;IACpG,OAAO,EAAE,CAAC,GACX;;EAzBP,AA2BM,kBA3BY,AAgBf,UAAU,CACT,gBAAgB,AAUb,OAAO,CAAC;IACP,SAAS,EAAE,wBAAiC,CAAC,cAAc,GAC5D"
}